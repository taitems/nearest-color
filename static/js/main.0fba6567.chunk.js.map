{"version":3,"sources":["helpers/contrast.js","helpers/isHex.js","defaultColors.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["rgbToYIQ","r","g","b","hexToRgb","hex","undefined","result","exec","parseInt","module","exports","colorHex","threshold","rgb","str","test","red50","red100","red200","red300","red400","red500","red600","red700","red800","red900","orange50","orange100","orange200","orange300","orange400","orange500","orange600","orange700","orange800","orange900","yellow50","yellow100","yellow200","yellow300","yellow400","yellow500","yellow600","yellow700","yellow800","yellow900","green50","green100","green200","green300","green400","green500","green600","green700","green800","green900","blue50","blue100","blue200","blue300","blue400","blue500","blue600","blue700","blue800","blue900","indigo50","indigo100","indigo200","indigo300","indigo400","indigo500","indigo600","indigo700","indigo800","indigo900","purple50","purple100","purple200","purple300","purple400","purple500","purple600","purple700","purple800","purple900","lightGrey100","lightGrey200","lightGrey300","lightGrey400","lightGrey500","lightGrey600","lightGrey700","lightGrey800","lightGrey900","darkGrey50","darkGrey100","darkGrey200","darkGrey300","darkGrey400","darkGrey500","darkGrey600","darkGrey700","darkGrey800","darkGrey900","navy100","navy200","navy300","navy400","navy500","navy600","navy700","navy800","navy900","contrast","require","isHex","Form","useState","defaultColors","list","setList","nearestColor","from","color","setColor","safeColor","setSafeColor","match","setMatch","Arrow","props","Box","width","height","bg","position","right","top","transform","zIndex","fontSize","overflow","mb","borderRadius","style","filter","flex","fontFamily","display","verticalAlign","textAlign","Flex","justifyItems","pt","px","Input","value","onChange","e","localColor","newColor","console","log","onColorChange","target","borderColor","flexDirection","isReadOnly","border","Text","name","Math","round","distance","jsonData","isValid","key","mode","htmlElementProps","App","Container","p","maxWidth","margin","children","ThemeProvider","CSSReset","py","as","fontWeight","letterSpacing","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0fba6567.chunk.js","sourcesContent":["function rgbToYIQ({ r, g, b }) {\n    return ((r * 299) + (g * 587) + (b * 114)) / 1000;\n}\n\nfunction hexToRgb(hex) {\n    if (!hex || hex === undefined || hex === '') {\n        return undefined;\n    }\n\n    const result =\n        /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : undefined;\n}\n\nfunction contrast(colorHex, threshold = 128) {\n    if (colorHex === undefined) {\n        return '#000';\n    }\n\n    const rgb = hexToRgb(colorHex);\n\n    if (rgb === undefined) {\n        return '#000';\n    }\n\n    return rgbToYIQ(rgb) >= threshold ? '#000' : '#fff';\n}\n\nmodule.exports = contrast;","\nconst isHex = str => {\n    return /^#[A-F0-9]{6}$/i.test(str)\n}\n\nmodule.exports = isHex;","export default {\n    // red\n    red50: '#FFF3F8',\n    red100: '#FFE3EE',\n    red200: '#FFC5DC',\n    red300: '#FFA2C8',\n    red400: '#FF73AC',\n    red500: '#FF4591',\n    red600: '#FF2D82',\n    red700: '#FF1675',\n    red800: '#DF005B',\n    red900: '#CF0758',\n    // orange\n    orange50: '#FFF9F3',\n    orange100: '#FEF1E3',\n    orange200: '#FEE2C4',\n    orange300: '#FED0A1',\n    orange400: '#FEB973',\n    orange500: '#FDA144',\n    orange600: '#FD952C',\n    orange700: '#FD8A15',\n    orange800: '#EB7701',\n    orange900: '#DD6F00',\n    // yellow\n    yellow50: '#FFFCF6',\n    yellow100: '#FFF8E8',\n    yellow200: '#FFF1D0',\n    yellow300: '#FFE9B5',\n    yellow400: '#FFDD8F',\n    yellow500: '#FFD574',\n    yellow600: '#FFCF61',\n    yellow700: '#FFC745',\n    yellow800: '#F1B730',\n    yellow900: '#ECAC16',\n    // green\n    green50: '#F2FDF9',\n    green100: '#E0FBF0',\n    green200: '#C0F7E1',\n    green300: '#9AF3CF',\n    green400: '#67ECB8',\n    green500: '#35E6A0',\n    green600: '#1BE393',\n    green700: '#02E088',\n    green800: '#02C97A',\n    green900: '#00BA70',\n    // blue\n    blue50: '#F6F9FF',\n    blue100: '#E8EFFF',\n    blue200: '#D0DFFF',\n    blue300: '#B3CBFF',\n    blue400: '#8EB2FF',\n    blue500: '#6898FF',\n    blue600: '#548AFF',\n    blue700: '#427EFF',\n    blue800: '#3068E1',\n    blue900: '#2556C0',\n    // indigo\n    indigo50: '#F4F4F9',\n    indigo100: '#E5E4EF',\n    indigo200: '#C9C7DE',\n    indigo300: '#A8A5CB',\n    indigo400: '#7D78B1',\n    indigo500: '#514B97',\n    indigo600: '#3B348A',\n    indigo700: '#261E7D',\n    indigo800: '#1B145D',\n    indigo900: '#130E46',\n    // purple\n    purple50: '#FBF6FF',\n    purple100: '#F6E9FF',\n    purple200: '#ECD2FF',\n    purple300: '#E1B7FF',\n    purple400: '#D294FF',\n    purple500: '#C370FF',\n    purple600: '#BB5DFF',\n    purple700: '#B44CFF',\n    purple800: '#9E3DE5',\n    purple900: '#832DC1',\n    // light-grey\n    lightGrey100: '#F9FBFD',\n    lightGrey200: '#F7F9FC',\n    lightGrey300: '#F3F5FA',\n    lightGrey400: '#EDF1F8',\n    lightGrey500: '#E7ECF7',\n    lightGrey600: '#DFE6F4',\n    lightGrey700: '#D7E0F1',\n    lightGrey800: '#CAD6EB',\n    lightGrey900: '#BFCCE3',\n    // dark-grey\n    darkGrey50: '#ADBAD0',\n    darkGrey100: '#A2B0C9',\n    darkGrey200: '#95A5C2',\n    darkGrey300: '#8596B7',\n    darkGrey400: '#7688AE',\n    darkGrey500: '#6B7FA6',\n    darkGrey600: '#6478A2',\n    darkGrey700: '#4A5D85',\n    darkGrey800: '#344468',\n    darkGrey900: '#243252',\n    // navy\n    navy100: '#E1E0E9',\n    navy200: '#C1C0D1',\n    navy300: '#9C9AB6',\n    navy400: '#6B6791',\n    navy500: '#353069',\n    navy600: '#201B5A',\n    navy700: '#080248',\n    navy800: '#050035',\n    navy900: '#03001E',\n}\n","import React, { useState } from 'react';\nimport { Input, Flex, Box, Text } from \"@chakra-ui/core\";\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport defaultColors from './defaultColors';\nconst contrast = require('./helpers/contrast');\nconst isHex = require('./helpers/isHex');\n\nconst Form = () => {\n\n    const placeholderColor = '#DFE0F0';\n\n    const [list, setList] = useState(defaultColors);\n    const nearestColor = require('nearest-color').from(list);\n\n    const [color, setColor] = useState(placeholderColor);\n    const [safeColor, setSafeColor] = useState(placeholderColor);\n    const [match, setMatch] = useState(nearestColor(placeholderColor));\n\n    const onListChange = jsonData => {\n        let isValid = true;\n        for (let key in jsonData) {\n            const validHex = isHex(jsonData[key]);\n            if (!validHex) {\n                isValid = false;\n                break;\n            }\n        }\n        if (isValid) {\n            setList(jsonData);\n            const newColor = nearestColor(color);\n            setMatch(newColor);\n        }\n    }\n\n    const onColorChange = localColor => {\n        setColor(localColor);\n        if (isHex(localColor)) {\n            setSafeColor(localColor);\n            const newColor = nearestColor(localColor);\n            setMatch(newColor);\n        } else {\n            console.log('isHex false!')\n            setSafeColor(null);\n            setMatch(null);\n        }\n    }\n\n    const ROW_SIZE = 175;\n\n\n    // const Col = props => <Box\n    //     flex={1}\n    //     height={ROW_SIZE}\n    //     position=\"relative\"\n    //     fontSize={16}\n    //     display=\"inline-block\"\n    //     verticalAlign=\"top\"\n    //     textAlign=\"center\"\n    //     {...props} />\n\n    const Arrow = props => <Box\n        width={ROW_SIZE}\n        height={ROW_SIZE}\n        bg={safeColor}\n        position=\"absolute\"\n        right={-(ROW_SIZE / 2)}\n        top={0}\n        transform=\"rotate(45deg)\"\n        zIndex={1}\n    />\n\n    return (<>\n        <Box fontSize={0} overflow=\"hidden\" mb={4} borderRadius={6} style={{ filter: \"drop-shadow(0 5px 10px rgba(0,0,0,0.1)), drop-shadow(0 0 20px rgba(0,0,0,0.1))\" }}>\n            <Box\n                flex={1}\n                height={ROW_SIZE}\n                position=\"relative\"\n                fontSize={16}\n                fontFamily=\"Roboto Mono\"\n                display=\"inline-block\"\n                verticalAlign=\"top\"\n                textAlign=\"center\"\n                width={`calc(50% - ${ROW_SIZE / 3}px)`}\n                bg={safeColor}>\n                <Flex width=\"100%\" height=\"100%\" justifyItems=\"center\" zIndex={2} position=\"relative\" pt=\"3.25rem\" px={4}>\n                    <Input value={color} onChange={e => { onColorChange(e.target.value) }} bg=\"transparent\" textAlign=\"center\" fontSize={28} borderColor=\"rgba(0,0,0,0.05)\" color={contrast(color)} />\n                </Flex>\n                <Arrow />\n            </Box>\n            <Box\n                flex={1}\n                height={ROW_SIZE}\n                position=\"relative\"\n                fontSize={16}\n                display=\"inline-block\"\n                fontFamily=\"Roboto Mono\"\n                verticalAlign=\"top\"\n                textAlign=\"center\"\n                width={`calc(50% + ${ROW_SIZE / 3}px)`}\n                bg={match && match.value}>\n                <Flex width=\"100%\" height=\"100%\" justifyItems=\"center\" zIndex={2} position=\"relative\" flexDirection=\"column\" pt=\"3.25rem\" px={4}>\n                    <Input value={match ? match.value : ''} bg=\"transparent\" isReadOnly textAlign=\"center\" fontSize={28} border=\"none\" color={match && contrast(match.value)} />\n                    {match && (\n                        <Box color={match && contrast(match.value)}>\n                            <Text fontFamily=\"Roboto Mono\" fontSize={16} mb={1}>{match.name}</Text>\n                            <Text fontFamily=\"Roboto Mono\" fontSize={13}>Distance {Math.round(match.distance)}</Text>\n                        </Box>\n                    )}\n                </Flex>\n            </Box>\n        </Box>\n\n        <Editor\n            value={list}\n            onChange={onListChange}\n            mode=\"code\"\n            htmlElementProps={{\n                style: {\n                    height: 500\n                },\n            }}\n        />\n    </>)\n}\n\nexport { Form };","import React from 'react';\nimport { ThemeProvider, CSSReset, Box, Text } from \"@chakra-ui/core\";\nimport { Form } from './Form';\nimport './App.css';\n\nfunction App() {\n\n  const Container = props => <Box p={4} maxWidth={960} margin=\"0 auto\">{props.children}</Box>;\n\n  return (\n    <ThemeProvider>\n      <CSSReset />\n      <Container>\n\n        <Box textAlign=\"center\" py={4}>\n          <Text as=\"h1\" fontSize={32} fontWeight={900} letterSpacing=\"-.035em\">Nearest Color</Text>\n          <Text as=\"p\">Finds the nearest color from a list of colors</Text>\n        </Box>\n\n        <Form />\n\n      </Container>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}